// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_SYSTEMTYPE_SCHEMA_H_
#define FLATBUFFERS_GENERATED_SYSTEMTYPE_SCHEMA_H_

#include "flatbuffers/flatbuffers.h"


namespace Schema {


enum class Color {
  Red = 1,
  Green = 2,
  Blue = 8
};

inline const char **EnumNamesColor() {
  static const char *names[] = { "Red", "Green", "", "", "", "", "", "Blue", nullptr };
  return names;
}

inline const char *EnumNameColor(Color e) { return EnumNamesColor()[static_cast<int>(e) - static_cast<int>(Color::Red)]; }

enum class SystemType {
  Null = 0,
  AI = 1,
  Animation = 2,
  Audio = 3,
  Count = 4,
  Graphic = 5,
  Gui = 6,
  Input = 7,
  Network = 8,
  Physic = 9,
  Generic = 10
};

inline const char **EnumNamesSystemType() {
  static const char *names[] = { "Null", "AI", "Animation", "Audio", "Count", "Graphic", "Gui", "Input", "Network", "Physic", "Generic", nullptr };
  return names;
}

inline const char *EnumNameSystemType(SystemType e) { return EnumNamesSystemType()[static_cast<int>(e)]; }

}  // namespace Schema

#endif  // FLATBUFFERS_GENERATED_SYSTEMTYPE_SCHEMA_H_

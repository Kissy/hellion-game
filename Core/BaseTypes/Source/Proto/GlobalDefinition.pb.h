// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GlobalDefinition.proto

#ifndef PROTOBUF_GlobalDefinition_2eproto__INCLUDED
#define PROTOBUF_GlobalDefinition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "System.pb.h"
#include "Property.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GlobalDefinition_2eproto();
void protobuf_AssignDesc_GlobalDefinition_2eproto();
void protobuf_ShutdownFile_GlobalDefinition_2eproto();

class GlobalDefinition;

// ===================================================================

class GlobalDefinition : public ::google::protobuf::Message {
 public:
  GlobalDefinition();
  virtual ~GlobalDefinition();
  
  GlobalDefinition(const GlobalDefinition& from);
  
  inline GlobalDefinition& operator=(const GlobalDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalDefinition& default_instance();
  
  void Swap(GlobalDefinition* other);
  
  // implements Message ----------------------------------------------
  
  GlobalDefinition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalDefinition& from);
  void MergeFrom(const GlobalDefinition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string startupScene = 1;
  inline bool has_startupscene() const;
  inline void clear_startupscene();
  static const int kStartupSceneFieldNumber = 1;
  inline const ::std::string& startupscene() const;
  inline void set_startupscene(const ::std::string& value);
  inline void set_startupscene(const char* value);
  inline void set_startupscene(const char* value, size_t size);
  inline ::std::string* mutable_startupscene();
  inline ::std::string* release_startupscene();
  
  // repeated .Property properties = 2;
  inline int properties_size() const;
  inline void clear_properties();
  static const int kPropertiesFieldNumber = 2;
  inline const ::Property& properties(int index) const;
  inline ::Property* mutable_properties(int index);
  inline ::Property* add_properties();
  inline const ::google::protobuf::RepeatedPtrField< ::Property >&
      properties() const;
  inline ::google::protobuf::RepeatedPtrField< ::Property >*
      mutable_properties();
  
  // repeated .System systems = 3;
  inline int systems_size() const;
  inline void clear_systems();
  static const int kSystemsFieldNumber = 3;
  inline const ::System& systems(int index) const;
  inline ::System* mutable_systems(int index);
  inline ::System* add_systems();
  inline const ::google::protobuf::RepeatedPtrField< ::System >&
      systems() const;
  inline ::google::protobuf::RepeatedPtrField< ::System >*
      mutable_systems();
  
  // repeated string scenes = 4;
  inline int scenes_size() const;
  inline void clear_scenes();
  static const int kScenesFieldNumber = 4;
  inline const ::std::string& scenes(int index) const;
  inline ::std::string* mutable_scenes(int index);
  inline void set_scenes(int index, const ::std::string& value);
  inline void set_scenes(int index, const char* value);
  inline void set_scenes(int index, const char* value, size_t size);
  inline ::std::string* add_scenes();
  inline void add_scenes(const ::std::string& value);
  inline void add_scenes(const char* value);
  inline void add_scenes(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& scenes() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_scenes();
  
  // @@protoc_insertion_point(class_scope:GlobalDefinition)
 private:
  inline void set_has_startupscene();
  inline void clear_has_startupscene();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* startupscene_;
  ::google::protobuf::RepeatedPtrField< ::Property > properties_;
  ::google::protobuf::RepeatedPtrField< ::System > systems_;
  ::google::protobuf::RepeatedPtrField< ::std::string> scenes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_GlobalDefinition_2eproto();
  friend void protobuf_AssignDesc_GlobalDefinition_2eproto();
  friend void protobuf_ShutdownFile_GlobalDefinition_2eproto();
  
  void InitAsDefaultInstance();
  static GlobalDefinition* default_instance_;
};
// ===================================================================


// ===================================================================

// GlobalDefinition

// required string startupScene = 1;
inline bool GlobalDefinition::has_startupscene() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalDefinition::set_has_startupscene() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalDefinition::clear_has_startupscene() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalDefinition::clear_startupscene() {
  if (startupscene_ != &::google::protobuf::internal::kEmptyString) {
    startupscene_->clear();
  }
  clear_has_startupscene();
}
inline const ::std::string& GlobalDefinition::startupscene() const {
  return *startupscene_;
}
inline void GlobalDefinition::set_startupscene(const ::std::string& value) {
  set_has_startupscene();
  if (startupscene_ == &::google::protobuf::internal::kEmptyString) {
    startupscene_ = new ::std::string;
  }
  startupscene_->assign(value);
}
inline void GlobalDefinition::set_startupscene(const char* value) {
  set_has_startupscene();
  if (startupscene_ == &::google::protobuf::internal::kEmptyString) {
    startupscene_ = new ::std::string;
  }
  startupscene_->assign(value);
}
inline void GlobalDefinition::set_startupscene(const char* value, size_t size) {
  set_has_startupscene();
  if (startupscene_ == &::google::protobuf::internal::kEmptyString) {
    startupscene_ = new ::std::string;
  }
  startupscene_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GlobalDefinition::mutable_startupscene() {
  set_has_startupscene();
  if (startupscene_ == &::google::protobuf::internal::kEmptyString) {
    startupscene_ = new ::std::string;
  }
  return startupscene_;
}
inline ::std::string* GlobalDefinition::release_startupscene() {
  clear_has_startupscene();
  if (startupscene_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = startupscene_;
    startupscene_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .Property properties = 2;
inline int GlobalDefinition::properties_size() const {
  return properties_.size();
}
inline void GlobalDefinition::clear_properties() {
  properties_.Clear();
}
inline const ::Property& GlobalDefinition::properties(int index) const {
  return properties_.Get(index);
}
inline ::Property* GlobalDefinition::mutable_properties(int index) {
  return properties_.Mutable(index);
}
inline ::Property* GlobalDefinition::add_properties() {
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Property >&
GlobalDefinition::properties() const {
  return properties_;
}
inline ::google::protobuf::RepeatedPtrField< ::Property >*
GlobalDefinition::mutable_properties() {
  return &properties_;
}

// repeated .System systems = 3;
inline int GlobalDefinition::systems_size() const {
  return systems_.size();
}
inline void GlobalDefinition::clear_systems() {
  systems_.Clear();
}
inline const ::System& GlobalDefinition::systems(int index) const {
  return systems_.Get(index);
}
inline ::System* GlobalDefinition::mutable_systems(int index) {
  return systems_.Mutable(index);
}
inline ::System* GlobalDefinition::add_systems() {
  return systems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::System >&
GlobalDefinition::systems() const {
  return systems_;
}
inline ::google::protobuf::RepeatedPtrField< ::System >*
GlobalDefinition::mutable_systems() {
  return &systems_;
}

// repeated string scenes = 4;
inline int GlobalDefinition::scenes_size() const {
  return scenes_.size();
}
inline void GlobalDefinition::clear_scenes() {
  scenes_.Clear();
}
inline const ::std::string& GlobalDefinition::scenes(int index) const {
  return scenes_.Get(index);
}
inline ::std::string* GlobalDefinition::mutable_scenes(int index) {
  return scenes_.Mutable(index);
}
inline void GlobalDefinition::set_scenes(int index, const ::std::string& value) {
  scenes_.Mutable(index)->assign(value);
}
inline void GlobalDefinition::set_scenes(int index, const char* value) {
  scenes_.Mutable(index)->assign(value);
}
inline void GlobalDefinition::set_scenes(int index, const char* value, size_t size) {
  scenes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GlobalDefinition::add_scenes() {
  return scenes_.Add();
}
inline void GlobalDefinition::add_scenes(const ::std::string& value) {
  scenes_.Add()->assign(value);
}
inline void GlobalDefinition::add_scenes(const char* value) {
  scenes_.Add()->assign(value);
}
inline void GlobalDefinition::add_scenes(const char* value, size_t size) {
  scenes_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GlobalDefinition::scenes() const {
  return scenes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GlobalDefinition::mutable_scenes() {
  return &scenes_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GlobalDefinition_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Proto/Definition/GlobalDefinition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GlobalDefinitionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalDefinitionProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Proto_2fDefinition_2fGlobalDefinition_2eproto() {
  protobuf_AddDesc_Proto_2fDefinition_2fGlobalDefinition_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Proto/Definition/GlobalDefinition.proto");
  GOOGLE_CHECK(file != NULL);
  GlobalDefinitionProto_descriptor_ = file->message_type(0);
  static const int GlobalDefinitionProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalDefinitionProto, startupscene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalDefinitionProto, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalDefinitionProto, systems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalDefinitionProto, scenes_),
  };
  GlobalDefinitionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalDefinitionProto_descriptor_,
      GlobalDefinitionProto::default_instance_,
      GlobalDefinitionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalDefinitionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalDefinitionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalDefinitionProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Proto_2fDefinition_2fGlobalDefinition_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalDefinitionProto_descriptor_, &GlobalDefinitionProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Proto_2fDefinition_2fGlobalDefinition_2eproto() {
  delete GlobalDefinitionProto::default_instance_;
  delete GlobalDefinitionProto_reflection_;
}

void protobuf_AddDesc_Proto_2fDefinition_2fGlobalDefinition_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Proto_2fCommon_2fSystem_2eproto();
  ::protobuf_AddDesc_Proto_2fCommon_2fProperty_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'Proto/Definition/GlobalDefinition.prot"
    "o\032\031Proto/Common/System.proto\032\033Proto/Comm"
    "on/Property.proto\"\200\001\n\025GlobalDefinitionPr"
    "oto\022\024\n\014startupScene\030\001 \002(\t\022\"\n\nproperties\030"
    "\002 \003(\0132\016.PropertyProto\022\035\n\007systems\030\003 \003(\0132\014"
    ".SystemProto\022\016\n\006scenes\030\004 \003(\tBC\n)fr.kissy"
    ".hellion.definition.encoder.protoB\023Globa"
    "lDefinitionDto\210\001\000", 297);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto/Definition/GlobalDefinition.proto", &protobuf_RegisterTypes);
  GlobalDefinitionProto::default_instance_ = new GlobalDefinitionProto();
  GlobalDefinitionProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Proto_2fDefinition_2fGlobalDefinition_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Proto_2fDefinition_2fGlobalDefinition_2eproto {
  StaticDescriptorInitializer_Proto_2fDefinition_2fGlobalDefinition_2eproto() {
    protobuf_AddDesc_Proto_2fDefinition_2fGlobalDefinition_2eproto();
  }
} static_descriptor_initializer_Proto_2fDefinition_2fGlobalDefinition_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int GlobalDefinitionProto::kStartupSceneFieldNumber;
const int GlobalDefinitionProto::kPropertiesFieldNumber;
const int GlobalDefinitionProto::kSystemsFieldNumber;
const int GlobalDefinitionProto::kScenesFieldNumber;
#endif  // !_MSC_VER

GlobalDefinitionProto::GlobalDefinitionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalDefinitionProto::InitAsDefaultInstance() {
}

GlobalDefinitionProto::GlobalDefinitionProto(const GlobalDefinitionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalDefinitionProto::SharedCtor() {
  _cached_size_ = 0;
  startupscene_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalDefinitionProto::~GlobalDefinitionProto() {
  SharedDtor();
}

void GlobalDefinitionProto::SharedDtor() {
  if (startupscene_ != &::google::protobuf::internal::kEmptyString) {
    delete startupscene_;
  }
  if (this != default_instance_) {
  }
}

void GlobalDefinitionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalDefinitionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalDefinitionProto_descriptor_;
}

const GlobalDefinitionProto& GlobalDefinitionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Proto_2fDefinition_2fGlobalDefinition_2eproto();  return *default_instance_;
}

GlobalDefinitionProto* GlobalDefinitionProto::default_instance_ = NULL;

GlobalDefinitionProto* GlobalDefinitionProto::New() const {
  return new GlobalDefinitionProto;
}

void GlobalDefinitionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_startupscene()) {
      if (startupscene_ != &::google::protobuf::internal::kEmptyString) {
        startupscene_->clear();
      }
    }
  }
  properties_.Clear();
  systems_.Clear();
  scenes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalDefinitionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string startupScene = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_startupscene()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->startupscene().data(), this->startupscene().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_properties;
        break;
      }
      
      // repeated .PropertyProto properties = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_properties;
        if (input->ExpectTag(26)) goto parse_systems;
        break;
      }
      
      // repeated .SystemProto systems = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_systems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_systems()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_systems;
        if (input->ExpectTag(34)) goto parse_scenes;
        break;
      }
      
      // repeated string scenes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_scenes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_scenes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->scenes(0).data(), this->scenes(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_scenes;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalDefinitionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string startupScene = 1;
  if (has_startupscene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->startupscene().data(), this->startupscene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->startupscene(), output);
  }
  
  // repeated .PropertyProto properties = 2;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->properties(i), output);
  }
  
  // repeated .SystemProto systems = 3;
  for (int i = 0; i < this->systems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->systems(i), output);
  }
  
  // repeated string scenes = 4;
  for (int i = 0; i < this->scenes_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->scenes(i).data(), this->scenes(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->scenes(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalDefinitionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string startupScene = 1;
  if (has_startupscene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->startupscene().data(), this->startupscene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->startupscene(), target);
  }
  
  // repeated .PropertyProto properties = 2;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->properties(i), target);
  }
  
  // repeated .SystemProto systems = 3;
  for (int i = 0; i < this->systems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->systems(i), target);
  }
  
  // repeated string scenes = 4;
  for (int i = 0; i < this->scenes_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scenes(i).data(), this->scenes(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->scenes(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalDefinitionProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string startupScene = 1;
    if (has_startupscene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->startupscene());
    }
    
  }
  // repeated .PropertyProto properties = 2;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  // repeated .SystemProto systems = 3;
  total_size += 1 * this->systems_size();
  for (int i = 0; i < this->systems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->systems(i));
  }
  
  // repeated string scenes = 4;
  total_size += 1 * this->scenes_size();
  for (int i = 0; i < this->scenes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->scenes(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalDefinitionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalDefinitionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalDefinitionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalDefinitionProto::MergeFrom(const GlobalDefinitionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  systems_.MergeFrom(from.systems_);
  scenes_.MergeFrom(from.scenes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_startupscene()) {
      set_startupscene(from.startupscene());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalDefinitionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalDefinitionProto::CopyFrom(const GlobalDefinitionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalDefinitionProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  for (int i = 0; i < systems_size(); i++) {
    if (!this->systems(i).IsInitialized()) return false;
  }
  return true;
}

void GlobalDefinitionProto::Swap(GlobalDefinitionProto* other) {
  if (other != this) {
    std::swap(startupscene_, other->startupscene_);
    properties_.Swap(&other->properties_);
    systems_.Swap(&other->systems_);
    scenes_.Swap(&other->scenes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalDefinitionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalDefinitionProto_descriptor_;
  metadata.reflection = GlobalDefinitionProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

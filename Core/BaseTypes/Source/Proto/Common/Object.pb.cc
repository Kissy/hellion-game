// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Proto/Common/Object.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ObjectProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectProto_SystemObjectProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectProto_SystemObjectProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Proto_2fCommon_2fObject_2eproto() {
  protobuf_AddDesc_Proto_2fCommon_2fObject_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Proto/Common/Object.proto");
  GOOGLE_CHECK(file != NULL);
  ObjectProto_descriptor_ = file->message_type(0);
  static const int ObjectProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto, systemobjects_),
  };
  ObjectProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectProto_descriptor_,
      ObjectProto::default_instance_,
      ObjectProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectProto));
  ObjectProto_SystemObjectProto_descriptor_ = ObjectProto_descriptor_->nested_type(0);
  static const int ObjectProto_SystemObjectProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto_SystemObjectProto, systemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto_SystemObjectProto, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto_SystemObjectProto, type_),
  };
  ObjectProto_SystemObjectProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectProto_SystemObjectProto_descriptor_,
      ObjectProto_SystemObjectProto::default_instance_,
      ObjectProto_SystemObjectProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto_SystemObjectProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectProto_SystemObjectProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectProto_SystemObjectProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Proto_2fCommon_2fObject_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectProto_descriptor_, &ObjectProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectProto_SystemObjectProto_descriptor_, &ObjectProto_SystemObjectProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Proto_2fCommon_2fObject_2eproto() {
  delete ObjectProto::default_instance_;
  delete ObjectProto_reflection_;
  delete ObjectProto_SystemObjectProto::default_instance_;
  delete ObjectProto_SystemObjectProto_reflection_;
}

void protobuf_AddDesc_Proto_2fCommon_2fObject_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Proto_2fCommon_2fSystem_2eproto();
  ::protobuf_AddDesc_Proto_2fCommon_2fProperty_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031Proto/Common/Object.proto\032\031Proto/Commo"
    "n/System.proto\032\033Proto/Common/Property.pr"
    "oto\"\300\001\n\013ObjectProto\022\014\n\004name\030\001 \002(\t\0225\n\rsys"
    "temObjects\030\002 \003(\0132\036.ObjectProto.SystemObj"
    "ectProto\032l\n\021SystemObjectProto\022%\n\nsystemT"
    "ype\030\n \002(\0162\021.SystemProto.Type\022\"\n\nproperti"
    "es\030\013 \003(\0132\016.PropertyProto\022\014\n\004type\030\014 \001(\tB-"
    "\n\035fr.kissy.hellion.proto.commonB\tObjectD"
    "to\210\001\000", 325);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto/Common/Object.proto", &protobuf_RegisterTypes);
  ObjectProto::default_instance_ = new ObjectProto();
  ObjectProto_SystemObjectProto::default_instance_ = new ObjectProto_SystemObjectProto();
  ObjectProto::default_instance_->InitAsDefaultInstance();
  ObjectProto_SystemObjectProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Proto_2fCommon_2fObject_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Proto_2fCommon_2fObject_2eproto {
  StaticDescriptorInitializer_Proto_2fCommon_2fObject_2eproto() {
    protobuf_AddDesc_Proto_2fCommon_2fObject_2eproto();
  }
} static_descriptor_initializer_Proto_2fCommon_2fObject_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int ObjectProto_SystemObjectProto::kSystemTypeFieldNumber;
const int ObjectProto_SystemObjectProto::kPropertiesFieldNumber;
const int ObjectProto_SystemObjectProto::kTypeFieldNumber;
#endif  // !_MSC_VER

ObjectProto_SystemObjectProto::ObjectProto_SystemObjectProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectProto_SystemObjectProto::InitAsDefaultInstance() {
}

ObjectProto_SystemObjectProto::ObjectProto_SystemObjectProto(const ObjectProto_SystemObjectProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectProto_SystemObjectProto::SharedCtor() {
  _cached_size_ = 0;
  systemtype_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectProto_SystemObjectProto::~ObjectProto_SystemObjectProto() {
  SharedDtor();
}

void ObjectProto_SystemObjectProto::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

void ObjectProto_SystemObjectProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectProto_SystemObjectProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectProto_SystemObjectProto_descriptor_;
}

const ObjectProto_SystemObjectProto& ObjectProto_SystemObjectProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Proto_2fCommon_2fObject_2eproto();  return *default_instance_;
}

ObjectProto_SystemObjectProto* ObjectProto_SystemObjectProto::default_instance_ = NULL;

ObjectProto_SystemObjectProto* ObjectProto_SystemObjectProto::New() const {
  return new ObjectProto_SystemObjectProto;
}

void ObjectProto_SystemObjectProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    systemtype_ = 0;
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
  }
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectProto_SystemObjectProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .SystemProto.Type systemType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SystemProto_Type_IsValid(value)) {
            set_systemtype(static_cast< ::SystemProto_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_properties;
        break;
      }
      
      // repeated .PropertyProto properties = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_properties;
        if (input->ExpectTag(98)) goto parse_type;
        break;
      }
      
      // optional string type = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectProto_SystemObjectProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .SystemProto.Type systemType = 10;
  if (has_systemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->systemtype(), output);
  }
  
  // repeated .PropertyProto properties = 11;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->properties(i), output);
  }
  
  // optional string type = 12;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectProto_SystemObjectProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .SystemProto.Type systemType = 10;
  if (has_systemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->systemtype(), target);
  }
  
  // repeated .PropertyProto properties = 11;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->properties(i), target);
  }
  
  // optional string type = 12;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectProto_SystemObjectProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .SystemProto.Type systemType = 10;
    if (has_systemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->systemtype());
    }
    
    // optional string type = 12;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
  }
  // repeated .PropertyProto properties = 11;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectProto_SystemObjectProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectProto_SystemObjectProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectProto_SystemObjectProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectProto_SystemObjectProto::MergeFrom(const ObjectProto_SystemObjectProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_systemtype()) {
      set_systemtype(from.systemtype());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectProto_SystemObjectProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectProto_SystemObjectProto::CopyFrom(const ObjectProto_SystemObjectProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectProto_SystemObjectProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  return true;
}

void ObjectProto_SystemObjectProto::Swap(ObjectProto_SystemObjectProto* other) {
  if (other != this) {
    std::swap(systemtype_, other->systemtype_);
    properties_.Swap(&other->properties_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectProto_SystemObjectProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectProto_SystemObjectProto_descriptor_;
  metadata.reflection = ObjectProto_SystemObjectProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ObjectProto::kNameFieldNumber;
const int ObjectProto::kSystemObjectsFieldNumber;
#endif  // !_MSC_VER

ObjectProto::ObjectProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectProto::InitAsDefaultInstance() {
}

ObjectProto::ObjectProto(const ObjectProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectProto::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectProto::~ObjectProto() {
  SharedDtor();
}

void ObjectProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ObjectProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectProto_descriptor_;
}

const ObjectProto& ObjectProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Proto_2fCommon_2fObject_2eproto();  return *default_instance_;
}

ObjectProto* ObjectProto::default_instance_ = NULL;

ObjectProto* ObjectProto::New() const {
  return new ObjectProto;
}

void ObjectProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  systemobjects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_systemObjects;
        break;
      }
      
      // repeated .ObjectProto.SystemObjectProto systemObjects = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_systemObjects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_systemobjects()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_systemObjects;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // repeated .ObjectProto.SystemObjectProto systemObjects = 2;
  for (int i = 0; i < this->systemobjects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->systemobjects(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // repeated .ObjectProto.SystemObjectProto systemObjects = 2;
  for (int i = 0; i < this->systemobjects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->systemobjects(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .ObjectProto.SystemObjectProto systemObjects = 2;
  total_size += 1 * this->systemobjects_size();
  for (int i = 0; i < this->systemobjects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->systemobjects(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectProto::MergeFrom(const ObjectProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  systemobjects_.MergeFrom(from.systemobjects_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectProto::CopyFrom(const ObjectProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < systemobjects_size(); i++) {
    if (!this->systemobjects(i).IsInitialized()) return false;
  }
  return true;
}

void ObjectProto::Swap(ObjectProto* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    systemobjects_.Swap(&other->systemobjects_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectProto_descriptor_;
  metadata.reflection = ObjectProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

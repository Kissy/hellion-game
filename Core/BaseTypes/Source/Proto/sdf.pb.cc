// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sdf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Sdf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sdf_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sdf_Object_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sdf_Object_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sdf_ObjectProperties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sdf_ObjectProperties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sdf_Link_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sdf_Link_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sdf_2eproto() {
  protobuf_AddDesc_sdf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sdf.proto");
  GOOGLE_CHECK(file != NULL);
  Sdf_descriptor_ = file->message_type(0);
  static const int Sdf_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf, systems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf, objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf, links_),
  };
  Sdf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sdf_descriptor_,
      Sdf::default_instance_,
      Sdf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sdf));
  Sdf_Object_descriptor_ = Sdf_descriptor_->nested_type(0);
  static const int Sdf_Object_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Object, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Object, objectproperties_),
  };
  Sdf_Object_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sdf_Object_descriptor_,
      Sdf_Object::default_instance_,
      Sdf_Object_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Object, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Object, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sdf_Object));
  Sdf_ObjectProperties_descriptor_ = Sdf_descriptor_->nested_type(1);
  static const int Sdf_ObjectProperties_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_ObjectProperties, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_ObjectProperties, systemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_ObjectProperties, properties_),
  };
  Sdf_ObjectProperties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sdf_ObjectProperties_descriptor_,
      Sdf_ObjectProperties::default_instance_,
      Sdf_ObjectProperties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_ObjectProperties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_ObjectProperties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sdf_ObjectProperties));
  Sdf_Link_descriptor_ = Sdf_descriptor_->nested_type(2);
  static const int Sdf_Link_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Link, subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Link, observer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Link, subjectsystemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Link, observersystemtype_),
  };
  Sdf_Link_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sdf_Link_descriptor_,
      Sdf_Link::default_instance_,
      Sdf_Link_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Link, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdf_Link, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sdf_Link));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sdf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sdf_descriptor_, &Sdf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sdf_Object_descriptor_, &Sdf_Object::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sdf_ObjectProperties_descriptor_, &Sdf_ObjectProperties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sdf_Link_descriptor_, &Sdf_Link::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sdf_2eproto() {
  delete Sdf::default_instance_;
  delete Sdf_reflection_;
  delete Sdf_Object::default_instance_;
  delete Sdf_Object_reflection_;
  delete Sdf_ObjectProperties::default_instance_;
  delete Sdf_ObjectProperties_reflection_;
  delete Sdf_Link::default_instance_;
  delete Sdf_Link_reflection_;
}

void protobuf_AddDesc_sdf_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_system_2eproto();
  ::protobuf_AddDesc_property_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tsdf.proto\032\014system.proto\032\016property.prot"
    "o\"\217\003\n\003Sdf\022\014\n\004name\030\001 \002(\t\022\030\n\007systems\030\002 \003(\013"
    "2\007.System\022\034\n\007objects\030\003 \003(\0132\013.Sdf.Object\022"
    "\030\n\005links\030\004 \003(\0132\t.Sdf.Link\032G\n\006Object\022\014\n\004n"
    "ame\030\n \002(\t\022/\n\020objectProperties\030\013 \003(\0132\025.Sd"
    "f.ObjectProperties\032a\n\020ObjectProperties\022\014"
    "\n\004type\030\024 \001(\t\022 \n\nsystemType\030\025 \002(\0162\014.Syste"
    "m.Type\022\035\n\nproperties\030\026 \003(\0132\t.Property\032|\n"
    "\004Link\022\017\n\007subject\030\036 \002(\t\022\020\n\010observer\030\037 \002(\t"
    "\022\'\n\021subjectSystemType\030  \002(\0162\014.System.Typ"
    "e\022(\n\022observerSystemType\030! \002(\0162\014.System.T"
    "ypeB%\n\026fr.kissy.encoder.protoB\010SdfProto\210"
    "\001\000", 482);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sdf.proto", &protobuf_RegisterTypes);
  Sdf::default_instance_ = new Sdf();
  Sdf_Object::default_instance_ = new Sdf_Object();
  Sdf_ObjectProperties::default_instance_ = new Sdf_ObjectProperties();
  Sdf_Link::default_instance_ = new Sdf_Link();
  Sdf::default_instance_->InitAsDefaultInstance();
  Sdf_Object::default_instance_->InitAsDefaultInstance();
  Sdf_ObjectProperties::default_instance_->InitAsDefaultInstance();
  Sdf_Link::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sdf_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sdf_2eproto {
  StaticDescriptorInitializer_sdf_2eproto() {
    protobuf_AddDesc_sdf_2eproto();
  }
} static_descriptor_initializer_sdf_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Sdf_Object::kNameFieldNumber;
const int Sdf_Object::kObjectPropertiesFieldNumber;
#endif  // !_MSC_VER

Sdf_Object::Sdf_Object()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sdf_Object::InitAsDefaultInstance() {
}

Sdf_Object::Sdf_Object(const Sdf_Object& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sdf_Object::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sdf_Object::~Sdf_Object() {
  SharedDtor();
}

void Sdf_Object::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Sdf_Object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sdf_Object::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sdf_Object_descriptor_;
}

const Sdf_Object& Sdf_Object::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdf_2eproto();  return *default_instance_;
}

Sdf_Object* Sdf_Object::default_instance_ = NULL;

Sdf_Object* Sdf_Object::New() const {
  return new Sdf_Object;
}

void Sdf_Object::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  objectproperties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sdf_Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_objectProperties;
        break;
      }
      
      // repeated .Sdf.ObjectProperties objectProperties = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objectProperties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objectproperties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_objectProperties;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sdf_Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 10;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->name(), output);
  }
  
  // repeated .Sdf.ObjectProperties objectProperties = 11;
  for (int i = 0; i < this->objectproperties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->objectproperties(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sdf_Object::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 10;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }
  
  // repeated .Sdf.ObjectProperties objectProperties = 11;
  for (int i = 0; i < this->objectproperties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->objectproperties(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sdf_Object::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .Sdf.ObjectProperties objectProperties = 11;
  total_size += 1 * this->objectproperties_size();
  for (int i = 0; i < this->objectproperties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objectproperties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sdf_Object::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sdf_Object* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sdf_Object*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sdf_Object::MergeFrom(const Sdf_Object& from) {
  GOOGLE_CHECK_NE(&from, this);
  objectproperties_.MergeFrom(from.objectproperties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sdf_Object::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sdf_Object::CopyFrom(const Sdf_Object& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sdf_Object::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < objectproperties_size(); i++) {
    if (!this->objectproperties(i).IsInitialized()) return false;
  }
  return true;
}

void Sdf_Object::Swap(Sdf_Object* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    objectproperties_.Swap(&other->objectproperties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sdf_Object::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sdf_Object_descriptor_;
  metadata.reflection = Sdf_Object_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Sdf_ObjectProperties::kTypeFieldNumber;
const int Sdf_ObjectProperties::kSystemTypeFieldNumber;
const int Sdf_ObjectProperties::kPropertiesFieldNumber;
#endif  // !_MSC_VER

Sdf_ObjectProperties::Sdf_ObjectProperties()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sdf_ObjectProperties::InitAsDefaultInstance() {
}

Sdf_ObjectProperties::Sdf_ObjectProperties(const Sdf_ObjectProperties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sdf_ObjectProperties::SharedCtor() {
  _cached_size_ = 0;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  systemtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sdf_ObjectProperties::~Sdf_ObjectProperties() {
  SharedDtor();
}

void Sdf_ObjectProperties::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (this != default_instance_) {
  }
}

void Sdf_ObjectProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sdf_ObjectProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sdf_ObjectProperties_descriptor_;
}

const Sdf_ObjectProperties& Sdf_ObjectProperties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdf_2eproto();  return *default_instance_;
}

Sdf_ObjectProperties* Sdf_ObjectProperties::default_instance_ = NULL;

Sdf_ObjectProperties* Sdf_ObjectProperties::New() const {
  return new Sdf_ObjectProperties;
}

void Sdf_ObjectProperties::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    systemtype_ = 0;
  }
  properties_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sdf_ObjectProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_systemType;
        break;
      }
      
      // required .System.Type systemType = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_systemType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::System_Type_IsValid(value)) {
            set_systemtype(static_cast< ::System_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_properties;
        break;
      }
      
      // repeated .Property properties = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_properties;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sdf_ObjectProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string type = 20;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->type(), output);
  }
  
  // required .System.Type systemType = 21;
  if (has_systemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->systemtype(), output);
  }
  
  // repeated .Property properties = 22;
  for (int i = 0; i < this->properties_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->properties(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sdf_ObjectProperties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string type = 20;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->type(), target);
  }
  
  // required .System.Type systemType = 21;
  if (has_systemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->systemtype(), target);
  }
  
  // repeated .Property properties = 22;
  for (int i = 0; i < this->properties_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->properties(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sdf_ObjectProperties::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string type = 20;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }
    
    // required .System.Type systemType = 21;
    if (has_systemtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->systemtype());
    }
    
  }
  // repeated .Property properties = 22;
  total_size += 2 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sdf_ObjectProperties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sdf_ObjectProperties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sdf_ObjectProperties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sdf_ObjectProperties::MergeFrom(const Sdf_ObjectProperties& from) {
  GOOGLE_CHECK_NE(&from, this);
  properties_.MergeFrom(from.properties_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_systemtype()) {
      set_systemtype(from.systemtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sdf_ObjectProperties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sdf_ObjectProperties::CopyFrom(const Sdf_ObjectProperties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sdf_ObjectProperties::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  for (int i = 0; i < properties_size(); i++) {
    if (!this->properties(i).IsInitialized()) return false;
  }
  return true;
}

void Sdf_ObjectProperties::Swap(Sdf_ObjectProperties* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(systemtype_, other->systemtype_);
    properties_.Swap(&other->properties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sdf_ObjectProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sdf_ObjectProperties_descriptor_;
  metadata.reflection = Sdf_ObjectProperties_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Sdf_Link::kSubjectFieldNumber;
const int Sdf_Link::kObserverFieldNumber;
const int Sdf_Link::kSubjectSystemTypeFieldNumber;
const int Sdf_Link::kObserverSystemTypeFieldNumber;
#endif  // !_MSC_VER

Sdf_Link::Sdf_Link()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sdf_Link::InitAsDefaultInstance() {
}

Sdf_Link::Sdf_Link(const Sdf_Link& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sdf_Link::SharedCtor() {
  _cached_size_ = 0;
  subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  observer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  subjectsystemtype_ = 0;
  observersystemtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sdf_Link::~Sdf_Link() {
  SharedDtor();
}

void Sdf_Link::SharedDtor() {
  if (subject_ != &::google::protobuf::internal::kEmptyString) {
    delete subject_;
  }
  if (observer_ != &::google::protobuf::internal::kEmptyString) {
    delete observer_;
  }
  if (this != default_instance_) {
  }
}

void Sdf_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sdf_Link::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sdf_Link_descriptor_;
}

const Sdf_Link& Sdf_Link::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdf_2eproto();  return *default_instance_;
}

Sdf_Link* Sdf_Link::default_instance_ = NULL;

Sdf_Link* Sdf_Link::New() const {
  return new Sdf_Link;
}

void Sdf_Link::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_subject()) {
      if (subject_ != &::google::protobuf::internal::kEmptyString) {
        subject_->clear();
      }
    }
    if (has_observer()) {
      if (observer_ != &::google::protobuf::internal::kEmptyString) {
        observer_->clear();
      }
    }
    subjectsystemtype_ = 0;
    observersystemtype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sdf_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string subject = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->subject().data(), this->subject().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_observer;
        break;
      }
      
      // required string observer = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_observer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_observer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->observer().data(), this->observer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_subjectSystemType;
        break;
      }
      
      // required .System.Type subjectSystemType = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_subjectSystemType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::System_Type_IsValid(value)) {
            set_subjectsystemtype(static_cast< ::System_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(32, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_observerSystemType;
        break;
      }
      
      // required .System.Type observerSystemType = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_observerSystemType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::System_Type_IsValid(value)) {
            set_observersystemtype(static_cast< ::System_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(33, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sdf_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string subject = 30;
  if (has_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->subject(), output);
  }
  
  // required string observer = 31;
  if (has_observer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->observer().data(), this->observer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->observer(), output);
  }
  
  // required .System.Type subjectSystemType = 32;
  if (has_subjectsystemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      32, this->subjectsystemtype(), output);
  }
  
  // required .System.Type observerSystemType = 33;
  if (has_observersystemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      33, this->observersystemtype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sdf_Link::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string subject = 30;
  if (has_subject()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->subject(), target);
  }
  
  // required string observer = 31;
  if (has_observer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->observer().data(), this->observer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->observer(), target);
  }
  
  // required .System.Type subjectSystemType = 32;
  if (has_subjectsystemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      32, this->subjectsystemtype(), target);
  }
  
  // required .System.Type observerSystemType = 33;
  if (has_observersystemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      33, this->observersystemtype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sdf_Link::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string subject = 30;
    if (has_subject()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subject());
    }
    
    // required string observer = 31;
    if (has_observer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->observer());
    }
    
    // required .System.Type subjectSystemType = 32;
    if (has_subjectsystemtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->subjectsystemtype());
    }
    
    // required .System.Type observerSystemType = 33;
    if (has_observersystemtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->observersystemtype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sdf_Link::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sdf_Link* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sdf_Link*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sdf_Link::MergeFrom(const Sdf_Link& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_subject()) {
      set_subject(from.subject());
    }
    if (from.has_observer()) {
      set_observer(from.observer());
    }
    if (from.has_subjectsystemtype()) {
      set_subjectsystemtype(from.subjectsystemtype());
    }
    if (from.has_observersystemtype()) {
      set_observersystemtype(from.observersystemtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sdf_Link::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sdf_Link::CopyFrom(const Sdf_Link& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sdf_Link::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void Sdf_Link::Swap(Sdf_Link* other) {
  if (other != this) {
    std::swap(subject_, other->subject_);
    std::swap(observer_, other->observer_);
    std::swap(subjectsystemtype_, other->subjectsystemtype_);
    std::swap(observersystemtype_, other->observersystemtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sdf_Link::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sdf_Link_descriptor_;
  metadata.reflection = Sdf_Link_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Sdf::kNameFieldNumber;
const int Sdf::kSystemsFieldNumber;
const int Sdf::kObjectsFieldNumber;
const int Sdf::kLinksFieldNumber;
#endif  // !_MSC_VER

Sdf::Sdf()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Sdf::InitAsDefaultInstance() {
}

Sdf::Sdf(const Sdf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Sdf::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sdf::~Sdf() {
  SharedDtor();
}

void Sdf::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Sdf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sdf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sdf_descriptor_;
}

const Sdf& Sdf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdf_2eproto();  return *default_instance_;
}

Sdf* Sdf::default_instance_ = NULL;

Sdf* Sdf::New() const {
  return new Sdf;
}

void Sdf::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  systems_.Clear();
  objects_.Clear();
  links_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sdf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_systems;
        break;
      }
      
      // repeated .System systems = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_systems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_systems()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_systems;
        if (input->ExpectTag(26)) goto parse_objects;
        break;
      }
      
      // repeated .Sdf.Object objects = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objects()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_objects;
        if (input->ExpectTag(34)) goto parse_links;
        break;
      }
      
      // repeated .Sdf.Link links = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_links:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_links()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_links;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Sdf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // repeated .System systems = 2;
  for (int i = 0; i < this->systems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->systems(i), output);
  }
  
  // repeated .Sdf.Object objects = 3;
  for (int i = 0; i < this->objects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->objects(i), output);
  }
  
  // repeated .Sdf.Link links = 4;
  for (int i = 0; i < this->links_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->links(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Sdf::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // repeated .System systems = 2;
  for (int i = 0; i < this->systems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->systems(i), target);
  }
  
  // repeated .Sdf.Object objects = 3;
  for (int i = 0; i < this->objects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->objects(i), target);
  }
  
  // repeated .Sdf.Link links = 4;
  for (int i = 0; i < this->links_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->links(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Sdf::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated .System systems = 2;
  total_size += 1 * this->systems_size();
  for (int i = 0; i < this->systems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->systems(i));
  }
  
  // repeated .Sdf.Object objects = 3;
  total_size += 1 * this->objects_size();
  for (int i = 0; i < this->objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objects(i));
  }
  
  // repeated .Sdf.Link links = 4;
  total_size += 1 * this->links_size();
  for (int i = 0; i < this->links_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->links(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sdf::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sdf* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sdf*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sdf::MergeFrom(const Sdf& from) {
  GOOGLE_CHECK_NE(&from, this);
  systems_.MergeFrom(from.systems_);
  objects_.MergeFrom(from.objects_);
  links_.MergeFrom(from.links_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sdf::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sdf::CopyFrom(const Sdf& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sdf::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  for (int i = 0; i < systems_size(); i++) {
    if (!this->systems(i).IsInitialized()) return false;
  }
  for (int i = 0; i < objects_size(); i++) {
    if (!this->objects(i).IsInitialized()) return false;
  }
  for (int i = 0; i < links_size(); i++) {
    if (!this->links(i).IsInitialized()) return false;
  }
  return true;
}

void Sdf::Swap(Sdf* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    systems_.Swap(&other->systems_);
    objects_.Swap(&other->objects_);
    links_.Swap(&other->links_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sdf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sdf_descriptor_;
  metadata.reflection = Sdf_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
